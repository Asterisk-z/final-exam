{
  "version": 4,
  "terraform_version": "1.4.0",
  "serial": 33,
  "lineage": "cec34d22-8afd-e4fb-3c74-6c73deef528b",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "eks-cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:us-east-1:366336511452:cluster/eks-cluster",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1EUXdOekExTURJeE1Gb1hEVE16TURRd05EQTFNREl4TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUEFZCnFaQmhkeURzL0t2bTNwQ1dHTU5pcTZmaHZqZ05MNTh6OTZJUjhNaXFUK1RNZk9haWQydG1yNHdkb0RqWGpZYkUKanFPODhoL1h1cDlEZUZHN0d6bjdKR05JWW5uK0sxeExYZ2x0TWE5MjFUVUQwZEtpWXV1Z296cTVxU2pvYW1OcgpNOHZjZmo5am83M0xVd2x1SytvMTNlZDY4eDMyK2V2ZjBYN2lyU3hVQXZoVlh0L0s5NWFXYzBCa3FocGUrSWNTCjVmSzVBaDhuMFhNK2J0WlpLczB4SDRSaldvVHBDcVJ5dzJpeXhuWlYwdHpaalE5d2REVDdQVjR4cXVaWWRqUnYKR2pBOTR4TXBGVjhZbXlkSGxmQWVESi9BS2M3SXh5ekRKeEZFQk1mZk8rVmNFZ2NlTmZWRG1YUllQM2RFRjR1cwpwc2FJbmUrZkljT0Z0dkxGQmNNQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZBREQ1anMxYU1BT015QlhFaGRFMVRkanpsRWdNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSVhyd2djdm1UMmlRa2VFdHdqZQp1RmttR0hTZld0ZHh6RkdiQ0s0YjkyZWkxODdUMXpnU3RqUzRoSVlMMGJXMy95MHMyNVI3TzY0WEdPYW9NMWdJCi80VG15dUdhd3d4NU81VHJ1aU5aSjAzQ2ZRZUhaYUlmMWVxak00Q09wbFlkN2x2MjlkeDFKQnZ3S1RLOVhBNzUKa0RNWi8zM0RYb1U2UzB1cjNISms4MGhsa0ZOZGtKUFo3MWt2Y1pLc1dLdS9lQW5NanVtcVMzdEg0eDBBNlY5WgpISzJZQXkza25CTzI4MWhwN3FoVVB5RUZiWWNOMEg0YzI3R2RYcGdHL3Y2R0toK1hOalpxazNBZUsxUG5tc2RCCm5jSDRtazlHMmRSK2s3ZjZCR2thbi9EYWVBQ2E1SHVxdy9peXpqOVNRaURKT05LRjd4RVlzSVcya3BXNEpQb0sKR1dVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
              }
            ],
            "cluster_id": null,
            "created_at": "2023-04-07 04:56:24.086 +0000 UTC",
            "enabled_cluster_log_types": [
              "api",
              "audit"
            ],
            "endpoint": "https://76CEC5A46F8E4FF741EC9C71C928E247.gr7.us-east-1.eks.amazonaws.com",
            "id": "eks-cluster",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/76CEC5A46F8E4FF741EC9C71C928E247"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "eks-cluster",
            "outpost_config": [],
            "platform_version": "eks.1",
            "role_arn": "arn:aws:iam::366336511452:role/eks-cluster-role",
            "status": "ACTIVE",
            "tags": {},
            "version": "1.25",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-067fd87395521ae4e",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-08497ef858cf5a836"
                ],
                "subnet_ids": [
                  "subnet-062ea5ee84ccc21cb",
                  "subnet-0bac09f0c8a686e49",
                  "subnet-0db45259b5ca9b38b",
                  "subnet-0e937e1f94ee796a0"
                ],
                "vpc_id": "vpc-0633efbe91dee0c5d"
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_elb_hosted_zone_id",
      "name": "elb_zone_id",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "mode": "data",
      "type": "kubectl_file_documents",
      "name": "docs",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: carts\n  labels:\n    name: carts\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: carts\n  template:\n    metadata:\n      labels:\n        name: carts\n    spec:\n      containers:\n      - name: carts\n        image: weaveworksdemos/carts:0.4.8\n        env:\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 200Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: carts\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: carts\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: carts\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: carts-db\n  labels:\n    name: carts-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: carts-db\n  template:\n    metadata:\n      labels:\n        name: carts-db\n    spec:\n      containers:\n      - name: carts-db\n        image: mongo\n        ports:\n        - name: mongo\n          containerPort: 27017\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: carts-db\n  labels:\n    name: carts-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: carts-db\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: catalogue\n  labels:\n    name: catalogue\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: catalogue\n  template:\n    metadata:\n      labels:\n        name: catalogue\n    spec:\n      containers:\n      - name: catalogue\n        image: weaveworksdemos/catalogue:0.3.5\n        command: [\"/app\"]\n        args:\n        - -port=80\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: catalogue\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: catalogue\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: catalogue\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: catalogue-db\n  labels:\n    name: catalogue-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: catalogue-db\n  template:\n    metadata:\n      labels:\n        name: catalogue-db\n    spec:\n      containers:\n      - name: catalogue-db\n        image: weaveworksdemos/catalogue-db:0.3.0\n        env:\n          - name: MYSQL_ROOT_PASSWORD\n            value: fake_password\n          - name: MYSQL_DATABASE\n            value: socksdb\n        ports:\n        - name: mysql\n          containerPort: 3306\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: catalogue-db\n  labels:\n    name: catalogue-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 3306\n    targetPort: 3306\n  selector:\n    name: catalogue-db\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: front-end\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: front-end\n  template:\n    metadata:\n      labels:\n        name: front-end\n    spec:\n      containers:\n      - name: front-end\n        image: weaveworksdemos/front-end:0.3.12\n        resources:\n          limits:\n            cpu: 300m\n            memory: 1000Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 8079\n        env:\n        - name: SESSION_REDIS\n          value: \"true\"\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 30\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: orders\n  labels:\n    name: orders\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: orders\n  template:\n    metadata:\n      labels:\n        name: orders\n    spec:\n      containers:\n      - name: orders\n        image: weaveworksdemos/orders:0.4.7\n        env:\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 500m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: orders\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: orders\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: orders\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: orders-db\n  labels:\n    name: orders-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: orders-db\n  template:\n    metadata:\n      labels:\n        name: orders-db\n    spec:\n      containers:\n      - name: orders-db\n        image: mongo\n        ports:\n        - name: mongo\n          containerPort: 27017\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: orders-db\n  labels:\n    name: orders-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: orders-db\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: payment\n  labels:\n    name: payment\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: payment\n  template:\n    metadata:\n      labels:\n        name: payment\n    spec:\n      containers:\n      - name: payment\n        image: weaveworksdemos/payment:0.4.3\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n          requests:\n            cpu: 99m\n            memory: 100Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: payment\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: payment\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: payment\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: queue-master\n  labels:\n    name: queue-master\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: queue-master\n  template:\n    metadata:\n      labels:\n        name: queue-master\n    spec:\n      containers:\n      - name: queue-master\n        image: weaveworksdemos/queue-master:0.3.1\n        env:\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 80\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: queue-master\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: queue-master\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: queue-master\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: rabbitmq\n  labels:\n    name: rabbitmq\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: rabbitmq\n  template:\n    metadata:\n      labels:\n        name: rabbitmq\n      annotations:\n        prometheus.io/scrape: \"false\"\n    spec:\n      containers:\n      - name: rabbitmq\n        image: rabbitmq:3.6.8-management\n        ports:\n        - containerPort: 15672\n          name: management\n        - containerPort: 5672\n          name: rabbitmq\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n              - DAC_OVERRIDE\n          readOnlyRootFilesystem: true\n      - name: rabbitmq-exporter\n        image: kbudde/rabbitmq-exporter\n        ports:\n        - containerPort: 9090\n          name: exporter\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: rabbitmq\n  annotations:\n        prometheus.io/scrape: 'true'\n        prometheus.io/port: '9090'\n  labels:\n    name: rabbitmq\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 5672\n    name: rabbitmq\n    targetPort: 5672\n  - port: 9090\n    name: exporter\n    targetPort: exporter\n    protocol: TCP\n  selector:\n    name: rabbitmq\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: session-db\n  labels:\n    name: session-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: session-db\n  template:\n    metadata:\n      labels:\n        name: session-db\n      annotations:\n        prometheus.io.scrape: \"false\"\n    spec:\n      containers:\n      - name: session-db\n        image: redis:alpine\n        ports:\n        - name: redis\n          containerPort: 6379\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: session-db\n  labels:\n    name: session-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 6379\n    targetPort: 6379\n  selector:\n    name: session-db\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: shipping\n  labels:\n    name: shipping\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: shipping\n  template:\n    metadata:\n      labels:\n        name: shipping\n    spec:\n      containers:\n      - name: shipping\n        image: weaveworksdemos/shipping:0.4.8\n        env:\n         - name: ZIPKIN\n           value: zipkin.jaeger.svc.cluster.local\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: shipping\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: shipping\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: shipping\n\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: user\n  labels:\n    name: user\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: user\n  template:\n    metadata:\n      labels:\n        name: user\n    spec:\n      containers:\n      - name: user\n        image: weaveworksdemos/user:0.4.7\n        resources:\n          limits:\n            cpu: 300m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        ports:\n        - containerPort: 80\n        env:\n        - name: mongo\n          value: user-db:27017\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: user\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: user\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: user\n\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: user-db\n  labels:\n    name: user-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: user-db\n  template:\n    metadata:\n      labels:\n        name: user-db\n    spec:\n      containers:\n      - name: user-db\n        image: weaveworksdemos/user-db:0.3.0\n\n        ports:\n        - name: mongo\n          containerPort: 27017\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: user-db\n  labels:\n    name: user-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: user-db\n\n",
            "documents": [
              "---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: carts\n  labels:\n    name: carts\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: carts\n  template:\n    metadata:\n      labels:\n        name: carts\n    spec:\n      containers:\n      - name: carts\n        image: weaveworksdemos/carts:0.4.8\n        env:\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 200Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: carts\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: carts\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: carts",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: carts-db\n  labels:\n    name: carts-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: carts-db\n  template:\n    metadata:\n      labels:\n        name: carts-db\n    spec:\n      containers:\n      - name: carts-db\n        image: mongo\n        ports:\n        - name: mongo\n          containerPort: 27017\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: carts-db\n  labels:\n    name: carts-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: carts-db",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: catalogue\n  labels:\n    name: catalogue\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: catalogue\n  template:\n    metadata:\n      labels:\n        name: catalogue\n    spec:\n      containers:\n      - name: catalogue\n        image: weaveworksdemos/catalogue:0.3.5\n        command: [\"/app\"]\n        args:\n        - -port=80\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: catalogue\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: catalogue\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: catalogue",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: catalogue-db\n  labels:\n    name: catalogue-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: catalogue-db\n  template:\n    metadata:\n      labels:\n        name: catalogue-db\n    spec:\n      containers:\n      - name: catalogue-db\n        image: weaveworksdemos/catalogue-db:0.3.0\n        env:\n          - name: MYSQL_ROOT_PASSWORD\n            value: fake_password\n          - name: MYSQL_DATABASE\n            value: socksdb\n        ports:\n        - name: mysql\n          containerPort: 3306\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: catalogue-db\n  labels:\n    name: catalogue-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 3306\n    targetPort: 3306\n  selector:\n    name: catalogue-db",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: front-end\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: front-end\n  template:\n    metadata:\n      labels:\n        name: front-end\n    spec:\n      containers:\n      - name: front-end\n        image: weaveworksdemos/front-end:0.3.12\n        resources:\n          limits:\n            cpu: 300m\n            memory: 1000Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 8079\n        env:\n        - name: SESSION_REDIS\n          value: \"true\"\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 30\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: orders\n  labels:\n    name: orders\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: orders\n  template:\n    metadata:\n      labels:\n        name: orders\n    spec:\n      containers:\n      - name: orders\n        image: weaveworksdemos/orders:0.4.7\n        env:\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 500m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: orders\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: orders\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: orders",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: orders-db\n  labels:\n    name: orders-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: orders-db\n  template:\n    metadata:\n      labels:\n        name: orders-db\n    spec:\n      containers:\n      - name: orders-db\n        image: mongo\n        ports:\n        - name: mongo\n          containerPort: 27017\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: orders-db\n  labels:\n    name: orders-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: orders-db",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: payment\n  labels:\n    name: payment\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: payment\n  template:\n    metadata:\n      labels:\n        name: payment\n    spec:\n      containers:\n      - name: payment\n        image: weaveworksdemos/payment:0.4.3\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n          requests:\n            cpu: 99m\n            memory: 100Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: payment\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: payment\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: payment",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: queue-master\n  labels:\n    name: queue-master\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: queue-master\n  template:\n    metadata:\n      labels:\n        name: queue-master\n    spec:\n      containers:\n      - name: queue-master\n        image: weaveworksdemos/queue-master:0.3.1\n        env:\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 80\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: queue-master\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: queue-master\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: queue-master",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: rabbitmq\n  labels:\n    name: rabbitmq\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: rabbitmq\n  template:\n    metadata:\n      labels:\n        name: rabbitmq\n      annotations:\n        prometheus.io/scrape: \"false\"\n    spec:\n      containers:\n      - name: rabbitmq\n        image: rabbitmq:3.6.8-management\n        ports:\n        - containerPort: 15672\n          name: management\n        - containerPort: 5672\n          name: rabbitmq\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n              - DAC_OVERRIDE\n          readOnlyRootFilesystem: true\n      - name: rabbitmq-exporter\n        image: kbudde/rabbitmq-exporter\n        ports:\n        - containerPort: 9090\n          name: exporter\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: rabbitmq\n  annotations:\n        prometheus.io/scrape: 'true'\n        prometheus.io/port: '9090'\n  labels:\n    name: rabbitmq\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 5672\n    name: rabbitmq\n    targetPort: 5672\n  - port: 9090\n    name: exporter\n    targetPort: exporter\n    protocol: TCP\n  selector:\n    name: rabbitmq",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: session-db\n  labels:\n    name: session-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: session-db\n  template:\n    metadata:\n      labels:\n        name: session-db\n      annotations:\n        prometheus.io.scrape: \"false\"\n    spec:\n      containers:\n      - name: session-db\n        image: redis:alpine\n        ports:\n        - name: redis\n          containerPort: 6379\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: session-db\n  labels:\n    name: session-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 6379\n    targetPort: 6379\n  selector:\n    name: session-db",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: shipping\n  labels:\n    name: shipping\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: shipping\n  template:\n    metadata:\n      labels:\n        name: shipping\n    spec:\n      containers:\n      - name: shipping\n        image: weaveworksdemos/shipping:0.4.8\n        env:\n         - name: ZIPKIN\n           value: zipkin.jaeger.svc.cluster.local\n         - name: JAVA_OPTS\n           value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        ports:\n        - containerPort: 80\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: shipping\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: shipping\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: shipping",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: user\n  labels:\n    name: user\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: user\n  template:\n    metadata:\n      labels:\n        name: user\n    spec:\n      containers:\n      - name: user\n        image: weaveworksdemos/user:0.4.7\n        resources:\n          limits:\n            cpu: 300m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        ports:\n        - containerPort: 80\n        env:\n        - name: mongo\n          value: user-db:27017\n        securityContext:\n          runAsNonRoot: true\n          runAsUser: 10001\n          capabilities:\n            drop:\n              - all\n            add:\n              - NET_BIND_SERVICE\n          readOnlyRootFilesystem: true\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: user\n  annotations:\n        prometheus.io/scrape: 'true'\n  labels:\n    name: user\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: user",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: user-db\n  labels:\n    name: user-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: user-db\n  template:\n    metadata:\n      labels:\n        name: user-db\n    spec:\n      containers:\n      - name: user-db\n        image: weaveworksdemos/user-db:0.3.0\n\n        ports:\n        - name: mongo\n          containerPort: 27017\n        securityContext:\n          capabilities:\n            drop:\n              - all\n            add:\n              - CHOWN\n              - SETGID\n              - SETUID\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      volumes:\n        - name: tmp-volume\n          emptyDir:\n            medium: Memory\n      nodeSelector:\n        beta.kubernetes.io/os: linux",
              "apiVersion: v1\nkind: Service\nmetadata:\n  name: user-db\n  labels:\n    name: user-db\n  namespace: sock-shop\nspec:\n  ports:\n    # the port that this service should serve on\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: user-db"
            ],
            "id": "a2afca7356e04b3cedd3152480f41b1dc6a597e1302cb7ff2ceb1bee0e98b6ac",
            "manifests": {
              "/api/v1/namespaces/sock-shop/services/carts": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: carts\n  name: carts\n  namespace: sock-shop\nspec:\n  ports:\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: carts\n",
              "/api/v1/namespaces/sock-shop/services/carts-db": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: carts-db\n  name: carts-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: carts-db\n",
              "/api/v1/namespaces/sock-shop/services/catalogue": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: catalogue\n  name: catalogue\n  namespace: sock-shop\nspec:\n  ports:\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: catalogue\n",
              "/api/v1/namespaces/sock-shop/services/catalogue-db": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: catalogue-db\n  name: catalogue-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 3306\n    targetPort: 3306\n  selector:\n    name: catalogue-db\n",
              "/api/v1/namespaces/sock-shop/services/orders": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: orders\n  name: orders\n  namespace: sock-shop\nspec:\n  ports:\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: orders\n",
              "/api/v1/namespaces/sock-shop/services/orders-db": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: orders-db\n  name: orders-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: orders-db\n",
              "/api/v1/namespaces/sock-shop/services/payment": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: payment\n  name: payment\n  namespace: sock-shop\nspec:\n  ports:\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: payment\n",
              "/api/v1/namespaces/sock-shop/services/queue-master": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: queue-master\n  name: queue-master\n  namespace: sock-shop\nspec:\n  ports:\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: queue-master\n",
              "/api/v1/namespaces/sock-shop/services/rabbitmq": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/port: \"9090\"\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: rabbitmq\n  name: rabbitmq\n  namespace: sock-shop\nspec:\n  ports:\n  - name: rabbitmq\n    port: 5672\n    targetPort: 5672\n  - name: exporter\n    port: 9090\n    protocol: TCP\n    targetPort: exporter\n  selector:\n    name: rabbitmq\n",
              "/api/v1/namespaces/sock-shop/services/session-db": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: session-db\n  name: session-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 6379\n    targetPort: 6379\n  selector:\n    name: session-db\n",
              "/api/v1/namespaces/sock-shop/services/shipping": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: shipping\n  name: shipping\n  namespace: sock-shop\nspec:\n  ports:\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: shipping\n",
              "/api/v1/namespaces/sock-shop/services/user": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: user\n  name: user\n  namespace: sock-shop\nspec:\n  ports:\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: user\n",
              "/api/v1/namespaces/sock-shop/services/user-db": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: user-db\n  name: user-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: user-db\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/carts": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: carts\n  name: carts\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: carts\n  template:\n    metadata:\n      labels:\n        name: carts\n    spec:\n      containers:\n      - env:\n        - name: JAVA_OPTS\n          value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom\n            -Dspring.zipkin.enabled=false\n        image: weaveworksdemos/carts:0.4.8\n        name: carts\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 200Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/carts-db": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: carts-db\n  name: carts-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: carts-db\n  template:\n    metadata:\n      labels:\n        name: carts-db\n    spec:\n      containers:\n      - image: mongo\n        name: carts-db\n        ports:\n        - containerPort: 27017\n          name: mongo\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/catalogue": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: catalogue\n  name: catalogue\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: catalogue\n  template:\n    metadata:\n      labels:\n        name: catalogue\n    spec:\n      containers:\n      - args:\n        - -port=80\n        command:\n        - /app\n        image: weaveworksdemos/catalogue:0.3.5\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        name: catalogue\n        ports:\n        - containerPort: 80\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/catalogue-db": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: catalogue-db\n  name: catalogue-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: catalogue-db\n  template:\n    metadata:\n      labels:\n        name: catalogue-db\n    spec:\n      containers:\n      - env:\n        - name: MYSQL_ROOT_PASSWORD\n          value: fake_password\n        - name: MYSQL_DATABASE\n          value: socksdb\n        image: weaveworksdemos/catalogue-db:0.3.0\n        name: catalogue-db\n        ports:\n        - containerPort: 3306\n          name: mysql\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/front-end": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: front-end\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: front-end\n  template:\n    metadata:\n      labels:\n        name: front-end\n    spec:\n      containers:\n      - env:\n        - name: SESSION_REDIS\n          value: \"true\"\n        image: weaveworksdemos/front-end:0.3.12\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        name: front-end\n        ports:\n        - containerPort: 8079\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 30\n          periodSeconds: 3\n        resources:\n          limits:\n            cpu: 300m\n            memory: 1000Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        securityContext:\n          capabilities:\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/orders": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: orders\n  name: orders\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: orders\n  template:\n    metadata:\n      labels:\n        name: orders\n    spec:\n      containers:\n      - env:\n        - name: JAVA_OPTS\n          value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom\n            -Dspring.zipkin.enabled=false\n        image: weaveworksdemos/orders:0.4.7\n        name: orders\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: 500m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/orders-db": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: orders-db\n  name: orders-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: orders-db\n  template:\n    metadata:\n      labels:\n        name: orders-db\n    spec:\n      containers:\n      - image: mongo\n        name: orders-db\n        ports:\n        - containerPort: 27017\n          name: mongo\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/payment": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: payment\n  name: payment\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: payment\n  template:\n    metadata:\n      labels:\n        name: payment\n    spec:\n      containers:\n      - image: weaveworksdemos/payment:0.4.3\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        name: payment\n        ports:\n        - containerPort: 80\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n          requests:\n            cpu: 99m\n            memory: 100Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/queue-master": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: queue-master\n  name: queue-master\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: queue-master\n  template:\n    metadata:\n      labels:\n        name: queue-master\n    spec:\n      containers:\n      - env:\n        - name: JAVA_OPTS\n          value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom\n            -Dspring.zipkin.enabled=false\n        image: weaveworksdemos/queue-master:0.3.1\n        name: queue-master\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/rabbitmq": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: rabbitmq\n  name: rabbitmq\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: rabbitmq\n  template:\n    metadata:\n      annotations:\n        prometheus.io/scrape: \"false\"\n      labels:\n        name: rabbitmq\n    spec:\n      containers:\n      - image: rabbitmq:3.6.8-management\n        name: rabbitmq\n        ports:\n        - containerPort: 15672\n          name: management\n        - containerPort: 5672\n          name: rabbitmq\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            - DAC_OVERRIDE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      - image: kbudde/rabbitmq-exporter\n        name: rabbitmq-exporter\n        ports:\n        - containerPort: 9090\n          name: exporter\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/session-db": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: session-db\n  name: session-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: session-db\n  template:\n    metadata:\n      annotations:\n        prometheus.io.scrape: \"false\"\n      labels:\n        name: session-db\n    spec:\n      containers:\n      - image: redis:alpine\n        name: session-db\n        ports:\n        - containerPort: 6379\n          name: redis\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/shipping": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: shipping\n  name: shipping\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: shipping\n  template:\n    metadata:\n      labels:\n        name: shipping\n    spec:\n      containers:\n      - env:\n        - name: ZIPKIN\n          value: zipkin.jaeger.svc.cluster.local\n        - name: JAVA_OPTS\n          value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom\n            -Dspring.zipkin.enabled=false\n        image: weaveworksdemos/shipping:0.4.8\n        name: shipping\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/user": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: user\n  name: user\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: user\n  template:\n    metadata:\n      labels:\n        name: user\n    spec:\n      containers:\n      - env:\n        - name: mongo\n          value: user-db:27017\n        image: weaveworksdemos/user:0.4.7\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        name: user\n        ports:\n        - containerPort: 80\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n        resources:\n          limits:\n            cpu: 300m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
              "/apis/apps/v1/namespaces/sock-shop/deployments/user-db": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: user-db\n  name: user-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: user-db\n  template:\n    metadata:\n      labels:\n        name: user-db\n    spec:\n      containers:\n      - image: weaveworksdemos/user-db:0.3.0\n        name: user-db\n        ports:\n        - containerPort: 27017\n          name: mongo\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "portfolio-record",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "socks-record",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "aws_route53_zone",
      "name": "portfolio-domain-name",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:route53:::hostedzone/Z0326607ITBJ9MO97Y1F",
            "comment": "Managed by Terraform",
            "delegation_set_id": "",
            "force_destroy": false,
            "id": "Z0326607ITBJ9MO97Y1F",
            "name": "portfolio.danasterisk.me",
            "name_servers": [
              "ns-1517.awsdns-61.org",
              "ns-1813.awsdns-34.co.uk",
              "ns-36.awsdns-04.com",
              "ns-813.awsdns-37.net"
            ],
            "primary_name_server": "ns-1517.awsdns-61.org",
            "tags": null,
            "tags_all": {},
            "vpc": [],
            "zone_id": "Z0326607ITBJ9MO97Y1F"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route53_zone",
      "name": "socks-domain-name",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:route53:::hostedzone/Z08931583M7BVHNMNGE4S",
            "comment": "Managed by Terraform",
            "delegation_set_id": "",
            "force_destroy": false,
            "id": "Z08931583M7BVHNMNGE4S",
            "name": "socks.danasterisk.me",
            "name_servers": [
              "ns-1260.awsdns-29.org",
              "ns-1676.awsdns-17.co.uk",
              "ns-200.awsdns-25.com",
              "ns-771.awsdns-32.net"
            ],
            "primary_name_server": "ns-1676.awsdns-17.co.uk",
            "tags": null,
            "tags_all": {},
            "vpc": [],
            "zone_id": "Z08931583M7BVHNMNGE4S"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "kube-deployment-socks",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/carts",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/carts",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "a2b694458ebc0f2ffd9bb5c6d5145639c9e8dd8a5518271557f5139c7ba056f3",
            "live_uid": "006e079b-a589-4969-901e-0252d4f0fe5a",
            "name": "carts",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "006e079b-a589-4969-901e-0252d4f0fe5a",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: carts\n  name: carts\n  namespace: sock-shop\nspec:\n  ports:\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: carts\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: carts\n  name: carts\n  namespace: sock-shop\nspec:\n  ports:\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: carts\n",
            "yaml_incluster": "a2b694458ebc0f2ffd9bb5c6d5145639c9e8dd8a5518271557f5139c7ba056f3"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/carts-db",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/carts-db",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "e3029c4bcfc55211274c49e3c15b09edf49d322b936d2d8032f6f046764bd9e8",
            "live_uid": "2082ff18-3b94-4026-b9cf-db6250b2e75e",
            "name": "carts-db",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "2082ff18-3b94-4026-b9cf-db6250b2e75e",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: carts-db\n  name: carts-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: carts-db\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: carts-db\n  name: carts-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: carts-db\n",
            "yaml_incluster": "e3029c4bcfc55211274c49e3c15b09edf49d322b936d2d8032f6f046764bd9e8"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/catalogue",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/catalogue",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "b6f7e3bc92391b079c74ed6e9e6050f239e51dadfa353825467dcde398c4ec8d",
            "live_uid": "ac14bd08-b6a4-4c2b-ae93-f871b1a7003d",
            "name": "catalogue",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "ac14bd08-b6a4-4c2b-ae93-f871b1a7003d",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: catalogue\n  name: catalogue\n  namespace: sock-shop\nspec:\n  ports:\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: catalogue\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: catalogue\n  name: catalogue\n  namespace: sock-shop\nspec:\n  ports:\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: catalogue\n",
            "yaml_incluster": "b6f7e3bc92391b079c74ed6e9e6050f239e51dadfa353825467dcde398c4ec8d"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/catalogue-db",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/catalogue-db",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "ce55b5ae929c695f837b11ad16aae4b4c044220556d68b85baf3037e7be03c7b",
            "live_uid": "9c0da3fa-61fc-4eb1-ae04-37d457e2b5a2",
            "name": "catalogue-db",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "9c0da3fa-61fc-4eb1-ae04-37d457e2b5a2",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: catalogue-db\n  name: catalogue-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 3306\n    targetPort: 3306\n  selector:\n    name: catalogue-db\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: catalogue-db\n  name: catalogue-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 3306\n    targetPort: 3306\n  selector:\n    name: catalogue-db\n",
            "yaml_incluster": "ce55b5ae929c695f837b11ad16aae4b4c044220556d68b85baf3037e7be03c7b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/orders",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/orders",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "cdd5afee6add5df9471dda6549e7783dd969f01a9718c2df9ba449ab5eb87719",
            "live_uid": "5e309115-4f97-4cb6-b52a-540127a0c9c8",
            "name": "orders",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "5e309115-4f97-4cb6-b52a-540127a0c9c8",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: orders\n  name: orders\n  namespace: sock-shop\nspec:\n  ports:\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: orders\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: orders\n  name: orders\n  namespace: sock-shop\nspec:\n  ports:\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: orders\n",
            "yaml_incluster": "cdd5afee6add5df9471dda6549e7783dd969f01a9718c2df9ba449ab5eb87719"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/orders-db",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/orders-db",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "e89d8b835219e87b34f2de1d412507d279be3407191609894cf6aed1d76a4121",
            "live_uid": "1440c74f-d1c4-4f32-8c8c-f5ae6977f947",
            "name": "orders-db",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "1440c74f-d1c4-4f32-8c8c-f5ae6977f947",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: orders-db\n  name: orders-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: orders-db\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: orders-db\n  name: orders-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: orders-db\n",
            "yaml_incluster": "e89d8b835219e87b34f2de1d412507d279be3407191609894cf6aed1d76a4121"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/payment",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/payment",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "3059e86f6f43cf873ed0ffcc8c19514d127c2e2bfcbe618ad89c296a2a834bde",
            "live_uid": "dfb05034-6077-442b-88fb-adfc53996e19",
            "name": "payment",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "dfb05034-6077-442b-88fb-adfc53996e19",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: payment\n  name: payment\n  namespace: sock-shop\nspec:\n  ports:\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: payment\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: payment\n  name: payment\n  namespace: sock-shop\nspec:\n  ports:\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: payment\n",
            "yaml_incluster": "3059e86f6f43cf873ed0ffcc8c19514d127c2e2bfcbe618ad89c296a2a834bde"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/queue-master",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/queue-master",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "4e690e9d358200b62fac44d7209a91284016dd04960afe3add547d6dc008bcbf",
            "live_uid": "af1828ce-0b72-41b1-a656-613e081346bb",
            "name": "queue-master",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "af1828ce-0b72-41b1-a656-613e081346bb",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: queue-master\n  name: queue-master\n  namespace: sock-shop\nspec:\n  ports:\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: queue-master\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: queue-master\n  name: queue-master\n  namespace: sock-shop\nspec:\n  ports:\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: queue-master\n",
            "yaml_incluster": "4e690e9d358200b62fac44d7209a91284016dd04960afe3add547d6dc008bcbf"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/rabbitmq",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/rabbitmq",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "afcefff5f829fd0bf1fccd6b92488d2d241499609beb77edf09c805fe7834832",
            "live_uid": "4895c917-660c-4469-b741-03d140f29a65",
            "name": "rabbitmq",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "4895c917-660c-4469-b741-03d140f29a65",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/port: \"9090\"\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: rabbitmq\n  name: rabbitmq\n  namespace: sock-shop\nspec:\n  ports:\n  - name: rabbitmq\n    port: 5672\n    targetPort: 5672\n  - name: exporter\n    port: 9090\n    protocol: TCP\n    targetPort: exporter\n  selector:\n    name: rabbitmq\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/port: \"9090\"\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: rabbitmq\n  name: rabbitmq\n  namespace: sock-shop\nspec:\n  ports:\n  - name: rabbitmq\n    port: 5672\n    targetPort: 5672\n  - name: exporter\n    port: 9090\n    protocol: TCP\n    targetPort: exporter\n  selector:\n    name: rabbitmq\n",
            "yaml_incluster": "afcefff5f829fd0bf1fccd6b92488d2d241499609beb77edf09c805fe7834832"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/session-db",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/session-db",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "26cba484261f4621b3eac0701c29cc54ed70bb8c13dccf3ec6d664a4064b8c4d",
            "live_uid": "071ab151-2497-494a-94b5-31390dd1acf7",
            "name": "session-db",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "071ab151-2497-494a-94b5-31390dd1acf7",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: session-db\n  name: session-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 6379\n    targetPort: 6379\n  selector:\n    name: session-db\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: session-db\n  name: session-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 6379\n    targetPort: 6379\n  selector:\n    name: session-db\n",
            "yaml_incluster": "26cba484261f4621b3eac0701c29cc54ed70bb8c13dccf3ec6d664a4064b8c4d"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/shipping",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/shipping",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "f3cb384068160b5c21c00a9ff12944ea434a4654139c77b4ce9037e43e4344b3",
            "live_uid": "9ec32ae2-ea1f-4416-8fc9-d8d9304a9ce3",
            "name": "shipping",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "9ec32ae2-ea1f-4416-8fc9-d8d9304a9ce3",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: shipping\n  name: shipping\n  namespace: sock-shop\nspec:\n  ports:\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: shipping\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: shipping\n  name: shipping\n  namespace: sock-shop\nspec:\n  ports:\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: shipping\n",
            "yaml_incluster": "f3cb384068160b5c21c00a9ff12944ea434a4654139c77b4ce9037e43e4344b3"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/user",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/user",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "0db350d6ef96dc8a02235b74bfd4c4855cdc29daf0d5936394e79fa60da524b9",
            "live_uid": "86508328-a503-4484-9c36-949fd7d08ed7",
            "name": "user",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "86508328-a503-4484-9c36-949fd7d08ed7",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: user\n  name: user\n  namespace: sock-shop\nspec:\n  ports:\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: user\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/scrape: \"true\"\n  labels:\n    name: user\n  name: user\n  namespace: sock-shop\nspec:\n  ports:\n  - name: metrics\n    port: 80\n    targetPort: 80\n  selector:\n    name: user\n",
            "yaml_incluster": "0db350d6ef96dc8a02235b74bfd4c4855cdc29daf0d5936394e79fa60da524b9"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/api/v1/namespaces/sock-shop/services/user-db",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/sock-shop/services/user-db",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "292bb764a9115b56205faf5552ecdc83395479e921e1f85885e590776c80af66",
            "live_uid": "25fd881c-f466-4482-9000-6519ef731c76",
            "name": "user-db",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "25fd881c-f466-4482-9000-6519ef731c76",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: user-db\n  name: user-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: user-db\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: user-db\n  name: user-db\n  namespace: sock-shop\nspec:\n  ports:\n  - port: 27017\n    targetPort: 27017\n  selector:\n    name: user-db\n",
            "yaml_incluster": "292bb764a9115b56205faf5552ecdc83395479e921e1f85885e590776c80af66"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/carts",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/carts",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "1812201ed2b60cdab2af8d129c6e3759e334b362d96dd7e2ca215a09e7c5bf4c",
            "live_uid": "ac5917a1-c8ea-4b0a-a55a-4379efe1f769",
            "name": "carts",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "ac5917a1-c8ea-4b0a-a55a-4379efe1f769",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: carts\n  name: carts\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: carts\n  template:\n    metadata:\n      labels:\n        name: carts\n    spec:\n      containers:\n      - env:\n        - name: JAVA_OPTS\n          value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom\n            -Dspring.zipkin.enabled=false\n        image: weaveworksdemos/carts:0.4.8\n        name: carts\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 200Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: carts\n  name: carts\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: carts\n  template:\n    metadata:\n      labels:\n        name: carts\n    spec:\n      containers:\n      - env:\n        - name: JAVA_OPTS\n          value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom\n            -Dspring.zipkin.enabled=false\n        image: weaveworksdemos/carts:0.4.8\n        name: carts\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 200Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
            "yaml_incluster": "1812201ed2b60cdab2af8d129c6e3759e334b362d96dd7e2ca215a09e7c5bf4c"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/carts-db",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/carts-db",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "1d6646cf0365e6622aa93597f481ee318e74835ca2ba2d72935997c77c2e35f0",
            "live_uid": "6504a7df-5bfe-42a8-b9c7-658735d319d7",
            "name": "carts-db",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "6504a7df-5bfe-42a8-b9c7-658735d319d7",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: carts-db\n  name: carts-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: carts-db\n  template:\n    metadata:\n      labels:\n        name: carts-db\n    spec:\n      containers:\n      - image: mongo\n        name: carts-db\n        ports:\n        - containerPort: 27017\n          name: mongo\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: carts-db\n  name: carts-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: carts-db\n  template:\n    metadata:\n      labels:\n        name: carts-db\n    spec:\n      containers:\n      - image: mongo\n        name: carts-db\n        ports:\n        - containerPort: 27017\n          name: mongo\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
            "yaml_incluster": "1d6646cf0365e6622aa93597f481ee318e74835ca2ba2d72935997c77c2e35f0"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/catalogue",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/catalogue",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "9f595433673034fdeb23281fcba05a507174be0c06bc26d4a3f2386347f7d28d",
            "live_uid": "16fbb28a-1ccf-4511-8df2-2a7953f76677",
            "name": "catalogue",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "16fbb28a-1ccf-4511-8df2-2a7953f76677",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: catalogue\n  name: catalogue\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: catalogue\n  template:\n    metadata:\n      labels:\n        name: catalogue\n    spec:\n      containers:\n      - args:\n        - -port=80\n        command:\n        - /app\n        image: weaveworksdemos/catalogue:0.3.5\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        name: catalogue\n        ports:\n        - containerPort: 80\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: catalogue\n  name: catalogue\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: catalogue\n  template:\n    metadata:\n      labels:\n        name: catalogue\n    spec:\n      containers:\n      - args:\n        - -port=80\n        command:\n        - /app\n        image: weaveworksdemos/catalogue:0.3.5\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        name: catalogue\n        ports:\n        - containerPort: 80\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_incluster": "9f595433673034fdeb23281fcba05a507174be0c06bc26d4a3f2386347f7d28d"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/catalogue-db",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/catalogue-db",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "393755518fa7ce91f58325194d9128abe2d178380b3103101eb6b4363e9bffcd",
            "live_uid": "ea9199f2-aeca-461c-a74b-b351fe345cfa",
            "name": "catalogue-db",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "ea9199f2-aeca-461c-a74b-b351fe345cfa",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: catalogue-db\n  name: catalogue-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: catalogue-db\n  template:\n    metadata:\n      labels:\n        name: catalogue-db\n    spec:\n      containers:\n      - env:\n        - name: MYSQL_ROOT_PASSWORD\n          value: fake_password\n        - name: MYSQL_DATABASE\n          value: socksdb\n        image: weaveworksdemos/catalogue-db:0.3.0\n        name: catalogue-db\n        ports:\n        - containerPort: 3306\n          name: mysql\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: catalogue-db\n  name: catalogue-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: catalogue-db\n  template:\n    metadata:\n      labels:\n        name: catalogue-db\n    spec:\n      containers:\n      - env:\n        - name: MYSQL_ROOT_PASSWORD\n          value: fake_password\n        - name: MYSQL_DATABASE\n          value: socksdb\n        image: weaveworksdemos/catalogue-db:0.3.0\n        name: catalogue-db\n        ports:\n        - containerPort: 3306\n          name: mysql\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_incluster": "393755518fa7ce91f58325194d9128abe2d178380b3103101eb6b4363e9bffcd"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/front-end",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/front-end",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "cf92a04d434199e016b5dee304e0892c12fb6075847fb3a258eea7a175d79a05",
            "live_uid": "af0a48e3-2953-4df0-9429-697dd8f4e6e9",
            "name": "front-end",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "af0a48e3-2953-4df0-9429-697dd8f4e6e9",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: front-end\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: front-end\n  template:\n    metadata:\n      labels:\n        name: front-end\n    spec:\n      containers:\n      - env:\n        - name: SESSION_REDIS\n          value: \"true\"\n        image: weaveworksdemos/front-end:0.3.12\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        name: front-end\n        ports:\n        - containerPort: 8079\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 30\n          periodSeconds: 3\n        resources:\n          limits:\n            cpu: 300m\n            memory: 1000Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        securityContext:\n          capabilities:\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: front-end\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: front-end\n  template:\n    metadata:\n      labels:\n        name: front-end\n    spec:\n      containers:\n      - env:\n        - name: SESSION_REDIS\n          value: \"true\"\n        image: weaveworksdemos/front-end:0.3.12\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        name: front-end\n        ports:\n        - containerPort: 8079\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 8079\n          initialDelaySeconds: 30\n          periodSeconds: 3\n        resources:\n          limits:\n            cpu: 300m\n            memory: 1000Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        securityContext:\n          capabilities:\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_incluster": "cf92a04d434199e016b5dee304e0892c12fb6075847fb3a258eea7a175d79a05"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/orders",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/orders",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "8a6a3069b8eeae0c89e093d723f5a2edd31e4cc94f63b154632ae79f5a2c9405",
            "live_uid": "ae06d11b-73fd-4435-8a6a-1e1c1ba54e81",
            "name": "orders",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "ae06d11b-73fd-4435-8a6a-1e1c1ba54e81",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: orders\n  name: orders\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: orders\n  template:\n    metadata:\n      labels:\n        name: orders\n    spec:\n      containers:\n      - env:\n        - name: JAVA_OPTS\n          value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom\n            -Dspring.zipkin.enabled=false\n        image: weaveworksdemos/orders:0.4.7\n        name: orders\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: 500m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: orders\n  name: orders\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: orders\n  template:\n    metadata:\n      labels:\n        name: orders\n    spec:\n      containers:\n      - env:\n        - name: JAVA_OPTS\n          value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom\n            -Dspring.zipkin.enabled=false\n        image: weaveworksdemos/orders:0.4.7\n        name: orders\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: 500m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
            "yaml_incluster": "8a6a3069b8eeae0c89e093d723f5a2edd31e4cc94f63b154632ae79f5a2c9405"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/orders-db",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/orders-db",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "73f615fed2ac0221388ecb22e3dee1dd3da67b0334574c6831689c066eb9d8fd",
            "live_uid": "64fb0206-479f-4f52-9ec4-73453444f6d3",
            "name": "orders-db",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "64fb0206-479f-4f52-9ec4-73453444f6d3",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: orders-db\n  name: orders-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: orders-db\n  template:\n    metadata:\n      labels:\n        name: orders-db\n    spec:\n      containers:\n      - image: mongo\n        name: orders-db\n        ports:\n        - containerPort: 27017\n          name: mongo\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: orders-db\n  name: orders-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: orders-db\n  template:\n    metadata:\n      labels:\n        name: orders-db\n    spec:\n      containers:\n      - image: mongo\n        name: orders-db\n        ports:\n        - containerPort: 27017\n          name: mongo\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
            "yaml_incluster": "73f615fed2ac0221388ecb22e3dee1dd3da67b0334574c6831689c066eb9d8fd"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/payment",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/payment",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "f67e330f0adf1e77840175f7ef26b3c78d4ea905fb7f16ffe95152437e8ea5a3",
            "live_uid": "930d8c61-7897-4cf5-9214-0bc0c697c898",
            "name": "payment",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "930d8c61-7897-4cf5-9214-0bc0c697c898",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: payment\n  name: payment\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: payment\n  template:\n    metadata:\n      labels:\n        name: payment\n    spec:\n      containers:\n      - image: weaveworksdemos/payment:0.4.3\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        name: payment\n        ports:\n        - containerPort: 80\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n          requests:\n            cpu: 99m\n            memory: 100Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: payment\n  name: payment\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: payment\n  template:\n    metadata:\n      labels:\n        name: payment\n    spec:\n      containers:\n      - image: weaveworksdemos/payment:0.4.3\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        name: payment\n        ports:\n        - containerPort: 80\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n        resources:\n          limits:\n            cpu: 200m\n            memory: 200Mi\n          requests:\n            cpu: 99m\n            memory: 100Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_incluster": "f67e330f0adf1e77840175f7ef26b3c78d4ea905fb7f16ffe95152437e8ea5a3"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/queue-master",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/queue-master",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "4071160439fbd6adf69fe17a38bf5a843145a8068d13aec784c45f62c743479a",
            "live_uid": "1b8e9c46-6fc0-4dc6-bbd7-888ccc20f6d4",
            "name": "queue-master",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "1b8e9c46-6fc0-4dc6-bbd7-888ccc20f6d4",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: queue-master\n  name: queue-master\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: queue-master\n  template:\n    metadata:\n      labels:\n        name: queue-master\n    spec:\n      containers:\n      - env:\n        - name: JAVA_OPTS\n          value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom\n            -Dspring.zipkin.enabled=false\n        image: weaveworksdemos/queue-master:0.3.1\n        name: queue-master\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: queue-master\n  name: queue-master\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: queue-master\n  template:\n    metadata:\n      labels:\n        name: queue-master\n    spec:\n      containers:\n      - env:\n        - name: JAVA_OPTS\n          value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom\n            -Dspring.zipkin.enabled=false\n        image: weaveworksdemos/queue-master:0.3.1\n        name: queue-master\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_incluster": "4071160439fbd6adf69fe17a38bf5a843145a8068d13aec784c45f62c743479a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/rabbitmq",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/rabbitmq",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "678593588e5df5a0137a27cf68646ed229537147d80ce138ea566e2279f59ef6",
            "live_uid": "d3a5686c-ce56-4abf-bd46-1f093b10b4d2",
            "name": "rabbitmq",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "d3a5686c-ce56-4abf-bd46-1f093b10b4d2",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: rabbitmq\n  name: rabbitmq\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: rabbitmq\n  template:\n    metadata:\n      annotations:\n        prometheus.io/scrape: \"false\"\n      labels:\n        name: rabbitmq\n    spec:\n      containers:\n      - image: rabbitmq:3.6.8-management\n        name: rabbitmq\n        ports:\n        - containerPort: 15672\n          name: management\n        - containerPort: 5672\n          name: rabbitmq\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            - DAC_OVERRIDE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      - image: kbudde/rabbitmq-exporter\n        name: rabbitmq-exporter\n        ports:\n        - containerPort: 9090\n          name: exporter\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: rabbitmq\n  name: rabbitmq\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: rabbitmq\n  template:\n    metadata:\n      annotations:\n        prometheus.io/scrape: \"false\"\n      labels:\n        name: rabbitmq\n    spec:\n      containers:\n      - image: rabbitmq:3.6.8-management\n        name: rabbitmq\n        ports:\n        - containerPort: 15672\n          name: management\n        - containerPort: 5672\n          name: rabbitmq\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            - DAC_OVERRIDE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      - image: kbudde/rabbitmq-exporter\n        name: rabbitmq-exporter\n        ports:\n        - containerPort: 9090\n          name: exporter\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_incluster": "678593588e5df5a0137a27cf68646ed229537147d80ce138ea566e2279f59ef6"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/session-db",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/session-db",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "f2012bb3bf5f73e1aaa0911d66c91db2de8b0edbe40816c1a0031607f7ca99bc",
            "live_uid": "eed9c5f5-8989-4697-a324-f081d8da27c5",
            "name": "session-db",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "eed9c5f5-8989-4697-a324-f081d8da27c5",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: session-db\n  name: session-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: session-db\n  template:\n    metadata:\n      annotations:\n        prometheus.io.scrape: \"false\"\n      labels:\n        name: session-db\n    spec:\n      containers:\n      - image: redis:alpine\n        name: session-db\n        ports:\n        - containerPort: 6379\n          name: redis\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: session-db\n  name: session-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: session-db\n  template:\n    metadata:\n      annotations:\n        prometheus.io.scrape: \"false\"\n      labels:\n        name: session-db\n    spec:\n      containers:\n      - image: redis:alpine\n        name: session-db\n        ports:\n        - containerPort: 6379\n          name: redis\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_incluster": "f2012bb3bf5f73e1aaa0911d66c91db2de8b0edbe40816c1a0031607f7ca99bc"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/shipping",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/shipping",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "6ae74cffec4e727554c13a36284fcdbaace818790b966b2244680244caf53971",
            "live_uid": "201bef0c-1cec-4d61-87ee-411bb761c30d",
            "name": "shipping",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "201bef0c-1cec-4d61-87ee-411bb761c30d",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: shipping\n  name: shipping\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: shipping\n  template:\n    metadata:\n      labels:\n        name: shipping\n    spec:\n      containers:\n      - env:\n        - name: ZIPKIN\n          value: zipkin.jaeger.svc.cluster.local\n        - name: JAVA_OPTS\n          value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom\n            -Dspring.zipkin.enabled=false\n        image: weaveworksdemos/shipping:0.4.8\n        name: shipping\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: shipping\n  name: shipping\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: shipping\n  template:\n    metadata:\n      labels:\n        name: shipping\n    spec:\n      containers:\n      - env:\n        - name: ZIPKIN\n          value: zipkin.jaeger.svc.cluster.local\n        - name: JAVA_OPTS\n          value: -Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom\n            -Dspring.zipkin.enabled=false\n        image: weaveworksdemos/shipping:0.4.8\n        name: shipping\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: 300m\n            memory: 500Mi\n          requests:\n            cpu: 100m\n            memory: 300Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
            "yaml_incluster": "6ae74cffec4e727554c13a36284fcdbaace818790b966b2244680244caf53971"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/user",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/user",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "7e2beb7c4ff76f2c3c40077ec573c7c3d1cafd2f09c861f36f0f31d4a56af98f",
            "live_uid": "8110573a-fdfd-4e88-8c2b-72356131b3d7",
            "name": "user",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "8110573a-fdfd-4e88-8c2b-72356131b3d7",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: user\n  name: user\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: user\n  template:\n    metadata:\n      labels:\n        name: user\n    spec:\n      containers:\n      - env:\n        - name: mongo\n          value: user-db:27017\n        image: weaveworksdemos/user:0.4.7\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        name: user\n        ports:\n        - containerPort: 80\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n        resources:\n          limits:\n            cpu: 300m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: user\n  name: user\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: user\n  template:\n    metadata:\n      labels:\n        name: user\n    spec:\n      containers:\n      - env:\n        - name: mongo\n          value: user-db:27017\n        image: weaveworksdemos/user:0.4.7\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 300\n          periodSeconds: 3\n        name: user\n        ports:\n        - containerPort: 80\n        readinessProbe:\n          httpGet:\n            path: /health\n            port: 80\n          initialDelaySeconds: 180\n          periodSeconds: 3\n        resources:\n          limits:\n            cpu: 300m\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        securityContext:\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 10001\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n",
            "yaml_incluster": "7e2beb7c4ff76f2c3c40077ec573c7c3d1cafd2f09c861f36f0f31d4a56af98f"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        },
        {
          "index_key": "/apis/apps/v1/namespaces/sock-shop/deployments/user-db",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/sock-shop/deployments/user-db",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "cf5cecbefd3cfac558ccbd6e53fe280f5e3edc4444e290ed532a3581a1400773",
            "live_uid": "4ea16f1f-c5ea-4ffb-a593-55a5b9a25060",
            "name": "user-db",
            "namespace": "sock-shop",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "4ea16f1f-c5ea-4ffb-a593-55a5b9a25060",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: user-db\n  name: user-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: user-db\n  template:\n    metadata:\n      labels:\n        name: user-db\n    spec:\n      containers:\n      - image: weaveworksdemos/user-db:0.3.0\n        name: user-db\n        ports:\n        - containerPort: 27017\n          name: mongo\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: user-db\n  name: user-db\n  namespace: sock-shop\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: user-db\n  template:\n    metadata:\n      labels:\n        name: user-db\n    spec:\n      containers:\n      - image: weaveworksdemos/user-db:0.3.0\n        name: user-db\n        ports:\n        - containerPort: 27017\n          name: mongo\n        securityContext:\n          capabilities:\n            add:\n            - CHOWN\n            - SETGID\n            - SETUID\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n        volumeMounts:\n        - mountPath: /tmp\n          name: tmp-volume\n      nodeSelector:\n        beta.kubernetes.io/os: linux\n      volumes:\n      - emptyDir:\n          medium: Memory\n        name: tmp-volume\n",
            "yaml_incluster": "cf5cecbefd3cfac558ccbd6e53fe280f5e3edc4444e290ed532a3581a1400773"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.eks-cluster",
            "data.kubectl_file_documents.docs"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "kube-deployment-portfolio",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "portfolio-db",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "kube-service-portfolio",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "kube-service-socks",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "porftolio-db-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": []
    }
  ],
  "check_results": null
}
